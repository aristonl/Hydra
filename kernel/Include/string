#include <string.h>

using namespace std;

class string {
	
	char* str;

	public:
		string();
		string(char* val);
		string(const string& src);
		string(string&& src);
		~string() { delete str; }
};

// TODO: Implement 'new' (needs malloc)
/*
string::string() : str(nullptr) {
	str = new char[1];
	str[0] = '\0';
}

string::string(char* val) {
	if (val == nullptr) {
		str = new char[1];
		str[0] = '\0';
	} else {
		str = new char[strlen(val) + 1];

		strcpy(str, val);
		str[strlen(val)] = '\0';
	}
}

string::string(const string& src) {
	str = new char[strlen(src.str) + 2];
	strcpy(str, src.str);
	str[strlen(src.str)] = '\0';
}
*/

string::string(string&& src) {
	str = src.str;
	src.str = nullptr;
}
